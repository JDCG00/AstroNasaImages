---
const { body, url, hdUrl, mediaType } = Astro.props;
---

<li class="link-card">
	<div>
		{body != undefined && <h2>{body}</h2>}
		{
			url != undefined && (
				<image-click data-message={hdUrl}>
					<img id="img-click" src={url} />
				</image-click>
			)
		}
	</div>
</li>
<script>
	class Image extends HTMLElement {
		constructor() {
			super();
			const img = document.getElementById("img-click");
			img.addEventListener("click", () => {
				window.location.assign(this.dataset.message);
			});
		}
	}
	customElements.define("image-click", Image);
</script>
<style>
	.link-card {
		height: 380px;
		width: 80%;
		list-style: none;
		display: flex;
		padding: 1px;
		background-color: rgba(35, 38, 45, 0.75);
		background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 0.6s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 0 0 1px rgba(255, 255, 255, 0.1);
	}
	.link-card > div {
		display: flex;
		justify-content: center;
		width: 100%;
		text-decoration: none;
		line-height: 1.4;
		padding: calc(1.5rem - 1px);
		border-radius: 8px;
		color: white;
		background-color: #23262d;
		opacity: 0.8;
	}
	.link-card > div > h2 {
		display: flex;
		align-items: center;
		text-align: justify;
		width: 85%;
		margin: 0;
		font-size: 1rem;
		transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);
	}
	.link-card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
		box-shadow: 0px 0px 25px 0px rgb(var(--accent-dark));
	}
	.link-card:is(:hover, :focus-within) h2 {
		color: rgb(var(--accent-light));
	}
	#img-click {
		border-radius: 8px;
		height: 100%;
		width: 100%;
		cursor: pointer;
	}
</style>
